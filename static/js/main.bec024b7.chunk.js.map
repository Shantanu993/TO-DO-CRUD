{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Todo","_ref","todo","index","markTodo","removeTodo","_jsxs","className","children","_jsx","style","textDecoration","isDone","text","Button","variant","onClick","FormTodo","_ref2","addTodo","_React$useState","React","useState","_React$useState2","_slicedToArray","value","setValue","Form","onSubmit","e","preventDefault","Group","Label","Control","type","onChange","target","placeholder","App","_React$useState3","_React$useState4","todos","setTodos","newTodos","_toConsumableArray","splice","concat","map","Card","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAMA,SAASA,EAAIC,GAAyC,IAAtCC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SAAUC,EAAUJ,EAAVI,WACrC,OACEC,eAAA,OACEC,UAAU,OAAMC,SAAA,CAGhBC,cAAA,QAAMC,MAAO,CAAEC,eAAgBT,EAAKU,OAAS,eAAiB,IAAKJ,SAAEN,EAAKW,OAC1EP,eAAA,OAAAE,SAAA,CACEC,cAACK,IAAM,CAACC,QAAQ,kBAAkBC,QAAS,kBAAMZ,EAASD,EAAM,EAACK,SAAC,WAAkB,IACpFC,cAACK,IAAM,CAACC,QAAQ,iBAAiBC,QAAS,kBAAMX,EAAWF,EAAM,EAACK,SAAC,gBAI3E,CAEA,SAASS,EAAQC,GAAe,IAAZC,EAAOD,EAAPC,QAClBC,EAA0BC,IAAMC,SAAS,IAAGC,EAAAC,YAAAJ,EAAA,GAArCK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAStB,OACEjB,eAACqB,IAAI,CAACC,SARa,SAAAC,GACnBA,EAAEC,iBACGL,IACLN,EAAQM,GACRC,EAAS,IACX,EAG+BlB,SAAA,CAC7BF,eAACqB,IAAKI,MAAK,CAAAvB,SAAA,CACTC,cAACkB,IAAKK,MAAK,CAAAxB,SAACC,cAAA,KAAAD,SAAG,eACfC,cAACkB,IAAKM,QAAO,CAACC,KAAK,OAAO3B,UAAU,QAAQkB,MAAOA,EAAOU,SAAU,SAAAN,GAAC,OAAIH,EAASG,EAAEO,OAAOX,MAAM,EAAEY,YAAY,oBAEjH5B,cAACK,IAAM,CAACC,QAAQ,eAAemB,KAAK,SAAQ1B,SAAC,aAKjD,CAoDe8B,MAlDf,WACE,IAAAC,EAA0BlB,IAAMC,SAAS,CACvC,CACET,KAAM,uBACND,QAAQ,KAEV4B,EAAAhB,YAAAe,EAAA,GALKE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAYhBpC,EAAW,SAAAD,GACf,IAAMwC,EAAQC,YAAOH,GACrBE,EAASxC,GAAOS,QAAS,EACzB8B,EAASC,EACX,EAEMtC,EAAa,SAAAF,GACjB,IAAMwC,EAAQC,YAAOH,GACrBE,EAASE,OAAO1C,EAAO,GACvBuC,EAASC,EACX,EAEA,OACElC,cAAA,OAAKF,UAAU,MAAKC,SAClBF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAIF,UAAU,mBAAkBC,SAAC,cACjCC,cAACQ,EAAQ,CAACE,QArBA,SAAAN,GACd,IAAM8B,EAAQ,GAAAG,OAAAF,YAAOH,GAAK,CAAE,CAAE5B,UAC9B6B,EAASC,EACX,IAmBMlC,cAAA,OAAAD,SACGiC,EAAMM,KAAI,SAAC7C,EAAMC,GAAK,OACrBM,cAACuC,IAAI,CAAAxC,SACHC,cAACuC,IAAKC,KAAI,CAAAzC,SACRC,cAACT,EAAI,CAELG,MAAOA,EACPD,KAAMA,EACNE,SAAUA,EACVC,WAAYA,GAJPF,MAOF,UAMnB,EChFe+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAApD,GAAkD,IAA/CqD,EAAMrD,EAANqD,OAAQC,EAAMtD,EAANsD,OAAQC,EAAMvD,EAANuD,OAAQC,EAAMxD,EAANwD,OAAQC,EAAOzD,EAAPyD,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJAQ,IAASC,OACPnD,cAACY,IAAMwC,WAAU,CAAArD,SACfC,cAAC6B,EAAG,MAENwB,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.bec024b7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Button, Card, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction Todo({ todo, index, markTodo, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      \n    >\n      <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\n      <div>\n        <Button variant=\"outline-success\" onClick={() => markTodo(index)}>&#x2714;</Button>{' '}\n        <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>&#x274C;</Button>\n      </div>\n    </div>\n  );\n}\n\nfunction FormTodo({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}> \n    <Form.Group>\n      <Form.Label><b>Add Todo</b></Form.Label>\n      <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new todo\" />\n    </Form.Group>\n    <Button variant=\"primary mb-3\" type=\"submit\">\n      Submit\n    </Button>\n  </Form>\n  );\n}\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"This is a sampe todo\",\n      isDone: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"text-center mb-4\">Todo List</h1>\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <Card>\n              <Card.Body>\n                <Todo\n                key={index}\n                index={index}\n                todo={todo}\n                markTodo={markTodo}\n                removeTodo={removeTodo}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}